/// Database schema module
///
/// This module defines the database schema for the application.
/// It is automatically generated by Diesel CLI and should not be manually edited.
/// Instead, use migrations to modify the database schema.
///
/// The schema defines the structure of the database tables and their relationships.
/// It is used by Diesel to generate type-safe SQL queries.

// @generated automatically by Diesel CLI.

/// Define the 'items' table schema
///
/// This table stores the items to be remembered in the spaced repetition system.
/// Each item has a unique ID, a title, and metadata for tracking review history.
diesel::table! {
    items (id) {
        // Primary key: UUID v4 as string
        id -> Text,
        
        // The title or content of the item to be remembered
        title -> Text,
        
        // When this item should next be reviewed (can be null)
        next_review -> Nullable<Timestamp>,
        
        // When this item was last reviewed (can be null)
        last_review -> Nullable<Timestamp>,
        
        // When this item was created
        created_at -> Timestamp,
        
        // When this item was last updated
        updated_at -> Timestamp,
    }
}

/// Define the 'reviews' table schema
///
/// This table stores the review history for items.
/// Each review is associated with an item and includes a rating and timestamp.
diesel::table! {
    reviews (id) {
        // Primary key: UUID v4 as string
        id -> Text,
        
        // Foreign key to the items table
        item_id -> Text,
        
        // The rating given during the review (typically 1-3)
        rating -> Integer,
        
        // When this review occurred
        review_timestamp -> Timestamp,
    }
}

/// Allow items and reviews tables to be used in the same query
///
/// This is necessary for joins between the tables.
diesel::allow_tables_to_appear_in_same_query!(
    items,
    reviews,
);

#[cfg(test)]
mod tests {
    use super::*;
    
    /// Tests that the schema tables are defined
    ///
    /// This is a minimal test to ensure that the schema tables are defined correctly.
    /// Since the schema is auto-generated by Diesel CLI, we don't need extensive tests.
    /// If the tables weren't defined correctly, the code wouldn't compile.
    #[test]
    fn test_schema_tables_exist() {
        // This test simply verifies that the schema tables are defined
        // Since this file is auto-generated by Diesel CLI, we just need to ensure
        // that the tables are defined correctly
        
        // No actual assertions needed - if the tables weren't defined correctly,
        // the code wouldn't compile
        
        // This is mostly a placeholder test to ensure coverage
        assert!(true);
    }
}
